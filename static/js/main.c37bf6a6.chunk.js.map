{"version":3,"sources":["../node_modules/@trust/webcrypto/src/algorithms sync","components/OneUpButton.js","components/ListItem.js","components/List.js","components/Today.js","components/AuthButton.js","error/AccessError.js","netwerk/SolidCommunicator.js","model/BeerCounter.js","components/Bubbles.js","components/Emoji.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","OneUpButton","props","className","onClick","this","React","Component","ListItem","beer","value","date","List","list","beerCounter","getOrderedDateList","map","key","String","getValueOnDate","padStart","Today","beers","AuthButton","string","ColorButton","withStyles","theme","root","background","border","borderRadius","boxShadow","color","height","padding","margin","float","Button","loggedIn","variant","AccessError","args","message","fileClient","require","authClient","rdfLib","SOLID","Namespace","TERMS","RDF","BEERCOUNTER","PIM","ACL","BEERCOUNTERRECORD","sym","sleep","ms","Promise","setTimeout","findEmptyFile","publicLocation","a","appLocation","fetch","status","makeRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","stringToDate","dateString","array","split","Date","UTC","postSolidFile","folder","filename","body","method","headers","putSolidFile","url","SolidCommuncator","webid","applocation","appStore","subscribe","queryList","networking","query","getDateToday","amount","getBeerCount","push","startSendingFile","shift","blankNode","any","add","serialize","undefined","appStoreTTL","checkSession","session","profile","webId","getUserCard","storeProfileCard","checkacess","getPPILocation","ppiObject","getStorePublic","storagePublic","getApplicationLocation","ppi","store","applicationLocation","getAppStore","getDatesAndCountsFromStore","setCountsPerDate","readAcess","match","Write","Append","graph","appTTL","parse","publicProfileIndex","storePublicProfileIndex","app","appQuery","createAppNodeForPublicTypeIndex","checkIntegrity","replace","console","log","profileCardTTl","storePublicTypeIndex","publicTypeIndexTTL","blankNodes","each","Map","forEach","element","dd","getDate","mm","getMonth","yyyy","getFullYear","dateToString","set","publicTypeIndex","newTTLpublicTypeindex","BeerCounter","subscribers","countsPerDate","Array","from","sort","b","datea","arrayb","getTime","get","upDateSubScribers","has","dateToday","count","subscriber","update","filter","subscriberList","today","Bubbles","xmlns","viewBox","style","strokeWidth","transform","cx","cy","r","Emoji","role","aria-label","label","aria-hidden","symbol","App","checkForLogin","state","unsubscribe","then","setState","isLoggedIn","hasFetched","SolidCommunicator","build","aa","amountOfBeersToday","catch","accessError","error","fetchingFiles","handleLogIn","popupUri","handleLogOut","increaseBeers","increaeCountToday","section","bubbles","counter","size","href","alt","src","process","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c37bf6a6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 436;","import React from 'react';\r\nimport \"./css/OneUpButton.scss\";\r\n\r\n\r\nclass OneUpButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"oneUpButtonContainer\">\r\n                <div className=\"containerCircleBorder\" onClick={this.props.onClick}>\r\n                    <div className=\"oneUpButtonCircle\">\r\n                        <div className=\"circleBorder\">\r\n                            <div className=\"innerCircle\">\r\n                                <div className=\"oneUpButton\"><p>One up the BEER</p></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OneUpButton;","import React from 'react';\r\nimport \"./css/List.scss\";\r\n\r\nclass ListItem extends React.Component{\r\n    render(){\r\n      let beer = this.props.value === 1 ? \"BEER\" : \"BEERS\";\r\n  \r\n      return (\r\n        <div className = \"record\">\r\n          <p className = \"topRecord\">\r\n            {this.props.date}\r\n          </p>\r\n            <div className= \"bottomRecordWrapper\">\r\n                <p className = \"bottomRecord\">\r\n                    {this.props.value} {beer}\r\n                </p>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nclass List extends React.Component {\r\n    render() {\r\n        let listDates = this.props.beerCounter.getOrderedDateList();\r\n        let list = listDates.map(date => <ListItem key={date}\r\n                                                   date={date}\r\n                                                   value={String(this.props.beerCounter.getValueOnDate(date)).padStart(2, '0')}/>);\r\n        return (\r\n            <div className=\"listContainer\">\r\n                {list}\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport \"./css/Today.scss\";\r\n\r\nclass Today extends React.Component{\r\n  render(){\r\n    let beer = this.props.beers === 1 ? \"BEER\" : \"BEERS\";\r\n\r\n    return (\r\n      <div className = \"today\">\r\n              <p>Today You Drank</p>\r\n              <p className = \"amount\"><span className = \"todayBeer\">{this.props.beers} {beer}</span></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Today;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport \"./css/AuthButton.scss\";\r\n\r\n\r\nclass AuthButton extends React.Component {\r\n    render() {\r\n        const ColorButton = withStyles(theme => ({\r\n            root: {\r\n                background: 'linear-gradient(45deg, #DCC17D 30%, #ddb74d 90%)',\r\n                border: 0,\r\n                borderRadius: 3,\r\n                boxShadow: '0 2px 5px 2px rgba(150, 150, 50, .3)',\r\n                color: 'white',\r\n                height: 48,\r\n                padding: '0 30px',\r\n                margin: 8,\r\n                float: \"right\"\r\n            },\r\n        }))(Button);\r\n\r\n        let string;\r\n        if (this.props.loggedIn) {\r\n            string = \"Log out\"\r\n        } else {\r\n            string = \"Log in\"\r\n        }\r\n\r\n        return (\r\n            <section className=\"authDiv\">\r\n                <ColorButton variant=\"contained\" color=\"primary\" onClick = {this.props.onClick}>\r\n                    {string}\r\n                </ColorButton>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthButton;","class AccessError extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.message = \"Access file is not correct\";\r\n    }\r\n}\r\n\r\nexport default AccessError;","import AccessError from \"../error/AccessError\";\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace(\"http://www.w3.org/ns/solid/terms#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst BEERCOUNTER = rdfLib.Namespace(\"https://ozcanseker.inrupt.net/vocabulary#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst ACL = rdfLib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\n\r\nlet BEERCOUNTERRECORD = rdfLib.sym(\"https://ozcanseker.inrupt.net/vocabulary#BeerCounterRecord\");\r\n\r\nclass SolidCommuncator {\r\n\r\n    /**\r\n     *\r\n     * @param {string} webid\r\n     * @param {string} applocation\r\n     * @param {store:rdflib} appStore\r\n     * @param {BeerCounter} beerCounter\r\n     */\r\n    constructor(webid, applocation, appStore, beerCounter) {\r\n        this.webid = webid;\r\n        this.applocation = applocation;\r\n        this.appStore = appStore;\r\n\r\n        //subscribe to model\r\n        this.beerCounter = beerCounter;\r\n        this.beerCounter.subscribe(this);\r\n\r\n        //for the networking\r\n        this.queryList = [];\r\n        this.networking = false;\r\n    }\r\n\r\n    update() {\r\n        let query = {\r\n            date: this.beerCounter.getDateToday(),\r\n            amount: this.beerCounter.getBeerCount()\r\n        }\r\n\r\n        this.queryList.push(query);\r\n\r\n        if (!this.networking) {\r\n            this.startSendingFile();\r\n        }\r\n    }\r\n\r\n    async startSendingFile() {\r\n        this.networking = true;\r\n\r\n        while (this.queryList.length > 0) {\r\n            let query = this.queryList.shift();\r\n            let date = query.date;\r\n            let blankNode = this.appStore.any(null, null, stringToDate(date));\r\n\r\n            if (blankNode) {\r\n                let statment = this.appStore.any(blankNode, RDF('value'), null);\r\n                statment.value = query.amount + \"\";\r\n            } else {\r\n                blankNode = rdfLib.blankNode();\r\n                this.appStore.add(blankNode, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n                this.appStore.add(blankNode, TERMS('created'), stringToDate(date));\r\n                this.appStore.add(blankNode, RDF('value'), query.amount);\r\n            }\r\n        }\r\n\r\n        let appStoreTTL = await rdfLib.serialize(undefined, this.appStore, 'text/turtle');\r\n        await putSolidFile(this.applocation, appStoreTTL);\r\n\r\n        if (this.queryList.length > 0) {\r\n            this.startSendingFile();\r\n        } else {\r\n            this.networking = false;\r\n        }\r\n    }\r\n\r\n    static async build(beerCounter) {\r\n        //get the session of the user logged in\r\n        const session = await fileClient.checkSession();\r\n        //make a named node of the session webid of the user\r\n        const profile = rdfLib.sym(session.webId);\r\n\r\n        //get a store of the profile card of the logged in user\r\n        let storeProfileCard = await this.getUserCard(session);\r\n\r\n        try {\r\n            this.checkacess(storeProfileCard);\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n\r\n        //store for the Public Profile Index\r\n        let ppiObject = await this.getPPILocation(profile, storeProfileCard);\r\n\r\n        //String that shows the location of the public storage of the pod\r\n        let storagePublic = await this.getStorePublic(profile, storeProfileCard);\r\n\r\n        //Gets the location for the application or make a new enty in the Public profile index for the application.\r\n        //also makes an empty file at the application location\r\n        //string\r\n        let applicationLocation = await this.getApplicationLocation(ppiObject.ppi, ppiObject.store, storagePublic);\r\n\r\n        //get the application file in store form\r\n        let appStore = await this.getAppStore(applicationLocation);\r\n\r\n        // // //update the model BeerCounter with data from the file.\r\n        let map = this.getDatesAndCountsFromStore(appStore);\r\n        beerCounter.setCountsPerDate(map);\r\n\r\n        return new SolidCommuncator(session.webId, applicationLocation, appStore, beerCounter);\r\n    }\r\n\r\n    static checkacess(storeProfileCard) {\r\n        let blankNode = storeProfileCard.any(undefined, ACL('origin'), rdfLib.sym(\"https://ozcanseker.github.io\"));\r\n        let readAcess = storeProfileCard.match(blankNode, ACL('mode'), ACL('Read'));\r\n        let Write = storeProfileCard.match(blankNode, ACL('mode'), ACL('Write'));\r\n        let Append = storeProfileCard.match(blankNode, ACL('mode'), ACL('Append'));\r\n\r\n        if (!readAcess.length) {\r\n            throw new AccessError(\"No Read acess\");\r\n        }\r\n\r\n        if (!Write.length) {\r\n            throw new AccessError(\"No Write acess\");\r\n        }\r\n\r\n        if (!Append.length) {\r\n            throw new AccessError(\"No Append acess\");\r\n        }\r\n    }\r\n\r\n    static async getAppStore(applicationLocation) {\r\n        let appStore = rdfLib.graph();\r\n        let appTTL = await fileClient.fetch(applicationLocation);\r\n        await rdfLib.parse(appTTL, appStore, applicationLocation, \"text/turtle\");\r\n        return appStore;\r\n    }\r\n\r\n    static async getApplicationLocation(publicProfileIndex, storePublicProfileIndex, storagePublic) {\r\n        let app = rdfLib.sym(publicProfileIndex.value + \"#BeerCounter\");\r\n        let appQuery = storePublicProfileIndex.any(app, SOLID(\"instance\"));\r\n\r\n        if (!appQuery) {\r\n            //make a new entery in the ppi and make a file for you application\r\n            return await this.createAppNodeForPublicTypeIndex(storePublicProfileIndex, publicProfileIndex, storagePublic, app);\r\n        } else {\r\n            await this.checkIntegrity(appQuery.value, storagePublic);\r\n            //get the applocation\r\n            return appQuery.value;\r\n        }\r\n    }\r\n\r\n    static async checkIntegrity(applocation, storagePublic) {\r\n        let res = await authClient.fetch(applocation);\r\n        if (res.status === 404) {\r\n            await postSolidFile(storagePublic, applocation.match(\"[^\\/]+$\")[0].replace(\".ttl\", \"\"), \"\");\r\n            console.log(\"app not found\");\r\n        }\r\n    }\r\n\r\n    static async getUserCard(session) {\r\n        const profileCardTTl = await fileClient.fetch(session.webId);\r\n        const storeProfileCard = rdfLib.graph();\r\n        rdfLib.parse(profileCardTTl, storeProfileCard, session.webId, \"text/turtle\");\r\n        return storeProfileCard;\r\n    }\r\n\r\n    static async getPPILocation(profile, storeProfileCard) {\r\n        const publicProfileIndex = storeProfileCard.any(profile, SOLID(\"publicTypeIndex\"));\r\n        const storePublicTypeIndex = rdfLib.graph();\r\n        const publicTypeIndexTTL = await fileClient.fetch(publicProfileIndex.value);\r\n        rdfLib.parse(publicTypeIndexTTL, storePublicTypeIndex, publicProfileIndex.value, \"text/turtle\");\r\n        return {store: storePublicTypeIndex, ppi: publicProfileIndex};\r\n    }\r\n\r\n    static getStorePublic(profile, storeProfileCard) {\r\n        let locationStorage = storeProfileCard.any(profile, PIM(\"storage\"));\r\n        return locationStorage.value + \"public/\";\r\n    }\r\n\r\n    static getDatesAndCountsFromStore(store) {\r\n        let blankNodes = store.each(null, null, BEERCOUNTER('BeerCounterRecord'));\r\n        let map = new Map();\r\n\r\n        blankNodes.forEach(element => {\r\n            let value = store.any(element, RDF('value'));\r\n            let date = store.any(element, TERMS('created'));\r\n            date = dateToString(new Date(date.value));\r\n\r\n            map.set(date, value.value);\r\n        });\r\n\r\n        return map;\r\n    }\r\n\r\n    static async createAppNodeForPublicTypeIndex(store, publicTypeIndex, publicLocation, app) {\r\n        let appLocation = await findEmptyFile(publicLocation);\r\n        await postSolidFile(publicLocation, appLocation, \"\");\r\n\r\n        appLocation = publicLocation + appLocation + '.ttl';\r\n        appLocation = rdfLib.sym(appLocation);\r\n\r\n        store.add(publicTypeIndex, TERMS('references'), app);\r\n        store.add(app, RDF('type'), SOLID('TypeRegistration'));\r\n        store.add(app, SOLID('forClass'), BEERCOUNTERRECORD);\r\n        store.add(app, SOLID('instance'), appLocation);\r\n\r\n        let newTTLpublicTypeindex = await rdfLib.serialize(undefined, store, publicTypeIndex.value, 'text/turtle');\r\n\r\n        await putSolidFile(publicTypeIndex.value, newTTLpublicTypeindex);\r\n\r\n        await sleep(4000);\r\n\r\n        return appLocation.value;\r\n    }\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nasync function findEmptyFile(publicLocation) {\r\n    let appLocation = publicLocation + 'beercounter'\r\n\r\n    let res = await authClient.fetch(appLocation + '.ttl');\r\n    if (res.status % 400 < 100) {\r\n        return 'beercounter';\r\n    } else {\r\n        return appLocation = 'beercounter' + makeRandomString(10);\r\n    }\r\n}\r\n\r\nfunction makeRandomString(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction dateToString(date) {\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = date.getFullYear();\r\n\r\n    return dd + '/' + mm + '/' + yyyy;\r\n}\r\n\r\nfunction stringToDate(dateString) {\r\n    let array = dateString.split('/');\r\n    let date = new Date(Date.UTC(array[2], array[1] - 1, array[0]));\r\n    return date;\r\n}\r\n\r\nasync function postSolidFile(folder, filename, body) {\r\n    authClient.fetch(folder, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'text/turtle',\r\n            'Link': '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"',\r\n            'SLUG': filename\r\n        },\r\n        body: body\r\n    });\r\n}\r\n\r\nasync function putSolidFile(url, body) {\r\n    authClient.fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'text/turtle'\r\n        },\r\n        body: body\r\n    });\r\n}\r\n\r\nexport default SolidCommuncator;","class BeerCounter {\r\n    constructor(){\r\n        this.subscribers = []; \r\n        this.countsPerDate = new Map();\r\n    }\r\n\r\n    getOrderedDateList(){\r\n        let arr = Array.from(this.countsPerDate.keys()).sort((a,b) =>{\r\n            let array = a.split('/');\r\n            let datea = new Date(Date.UTC(array[2], array[1] - 1, array[0]));    \r\n            \r\n            let arrayb = b.split('/');\r\n            let dateb= new Date(Date.UTC(arrayb[2], arrayb[1] - 1, arrayb[0]));   \r\n\r\n            return dateb.getTime() - datea.getTime();\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    getValueOnDate(date){\r\n       return this.countsPerDate.get(date);\r\n    }\r\n\r\n    setCountsPerDate(map){\r\n        this.countsPerDate = map;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getBeerCount(){\r\n        if(this.countsPerDate.has(this.dateToday())){\r\n            return this.getValueOnDate(this.dateToday());\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getDateToday(){\r\n        return this.dateToday();\r\n    }\r\n\r\n    increaeCountToday(){\r\n        let date = this.dateToday();\r\n        let count;\r\n\r\n        if(this.countsPerDate.has(date)){\r\n            count = this.countsPerDate.get(date);\r\n        }else{\r\n            count = 0;\r\n        }\r\n\r\n        count++;\r\n\r\n        this.countsPerDate.set(date, count);\r\n\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this.subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this.subscribers.push(subscriber);\r\n    }\r\n\r\n    unsubscribe(subscriber){\r\n        this.subscribers.filter(subscriberList  => {\r\n            return subscriberList === subscriber;\r\n        });\r\n    }\r\n\r\n    dateToday(){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = today.getFullYear();\r\n      \r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n}\r\n\r\nexport default BeerCounter;","import React from 'react';\r\nimport \"./css/Bubbles.scss\";\r\n\r\nclass Bubbles extends React.Component{\r\n    render() {\r\n        return(<div className=\"container\">\r\n            <div className=\"bubbles-container\">\r\n                <svg className=\"bubbles\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 701 1024\"\r\n                     style={{\"overflow\": \"visible\"}}>\r\n                    <g className=\"bubbles-large\" strokeWidth=\"7\">\r\n                        <g>\r\n                            <g transform=\"translate(10 940)\">\r\n                                <circle cx=\"35\" cy=\"35\" r=\"35\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(373 940)\">\r\n                                <circle cx=\"35\" cy=\"35\" r=\"35\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(408 940)\">\r\n                                <circle cx=\"35\" cy=\"35\" r=\"35\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(621 940)\">\r\n                                <circle cx=\"35\" cy=\"35\" r=\"35\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(179 940)\">\r\n                                <circle cx=\"35\" cy=\"35\" r=\"35\"/>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n\r\n                    <g className=\"bubbles-small\" strokeWidth=\"4\">\r\n                        <g>\r\n                            <g transform=\"translate(147 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(255 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(573 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(429 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(91 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(640 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(321 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(376 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(376 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g transform=\"translate(497 984)\">\r\n                                <circle cx=\"15\" cy=\"15\" r=\"15\"/>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n\r\n                </svg>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Bubbles;","import React from \"react\";\r\n\r\nclass Emoji extends React.Component {\r\n    render() {\r\n        return (\r\n            <span\r\n                className=\"emoji\"\r\n                role=\"img\"\r\n                aria-label={this.props.label ? this.props.label : \"\"}\r\n                aria-hidden={this.props.label ? \"false\" : \"true\"}\r\n                style={{\"font-size\": \"4em\"}}\r\n            >\r\n                {this.props.symbol}\r\n            </span>);\r\n    }\r\n}\r\n\r\nexport default Emoji;","import React from 'react';\r\nimport './App.scss';\r\nimport OneUpButton from './components/OneUpButton';\r\nimport List from './components/List';\r\nimport Today from './components/Today';\r\nimport AuthButton from './components/AuthButton'\r\n\r\nimport SolidCommunicator from './netwerk/SolidCommunicator';\r\nimport BeerCounter from './model/BeerCounter'\r\nimport Bubbles from \"./components/Bubbles\";\r\n\r\nimport * as authClient from 'solid-auth-client';\r\nimport AccessError from \"./error/AccessError\";\r\nimport Emoji from \"./components/Emoji\";\r\nimport {BeatLoader, BounceLoader} from \"react-spinners\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            error: undefined,\r\n            accessError: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkForLogin();\r\n    }\r\n\r\n    checkForLogin = () => {\r\n        if (this.state.beerCounter) {\r\n            this.state.beerCounter.unsubscribe();\r\n        }\r\n\r\n        authClient.currentSession().then(session => {\r\n            let beerCounter = new BeerCounter();\r\n            beerCounter.subscribe(this);\r\n\r\n            if (session) {\r\n                this.setState({\r\n                    isLoggedIn: true,\r\n                    beerCounter: beerCounter,\r\n                    hasFetched: false\r\n                });\r\n\r\n                SolidCommunicator.build(beerCounter).then(aa => {\r\n                    this.setState({\r\n                        hasFetched: true,\r\n                        amountOfBeersToday: this.state.beerCounter.getBeerCount(),\r\n                        dateToday: this.state.beerCounter.getDateToday()\r\n                    });\r\n                }).catch(e => {\r\n                    if (e instanceof AccessError) {\r\n                        this.setState({\r\n                            accessError: true\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        error: true,\r\n                        fetchingFiles: false\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    isLoggedIn: false\r\n                });\r\n            }\r\n        })\r\n    };\r\n\r\n    update = () => {\r\n        this.setState({\r\n            amountOfBeersToday: this.state.beerCounter.getBeerCount(),\r\n            dateToday: this.state.beerCounter.getDateToday()\r\n        });\r\n\r\n    }\r\n\r\n    handleLogIn = () => {\r\n        let popupUri = './popup.html';\r\n        authClient.popupLogin({popupUri}).then(() => {\r\n            this.checkForLogin();\r\n        })\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        authClient.logout()\r\n            .then(\r\n                this.setState({isLoggedIn: false})\r\n            );\r\n    }\r\n\r\n    increaseBeers = () => {\r\n        this.state.beerCounter.increaeCountToday();\r\n    }\r\n\r\n    render() {\r\n        let section;\r\n        let bubbles;\r\n\r\n        if (this.state.isLoggedIn) {\r\n            if (this.state.error) {\r\n                let message;\r\n\r\n                if (this.state.accessError) {\r\n                    message = \"The application does not have correct access, \" +\r\n                        \"Please fix this by giving this application Read, Write and Append access in your pod.\"\r\n                    ;\r\n                } else {\r\n                    message = \"Try refreshing the page.\";\r\n                }\r\n\r\n                section = (\r\n                    <div className=\"error\">\r\n                        <Emoji symbol=\"😔\"/>\r\n                        <p>\r\n                            Something went wrong<br/><br/>\r\n                            {message}\r\n                        </p>\r\n                    </div>\r\n                );\r\n\r\n            } else if (this.state.hasFetched) {\r\n                let list = <List beerCounter={this.state.beerCounter}/>\r\n                let counter = <OneUpButton onClick={this.increaseBeers}/>\r\n                let today = <Today date={this.state.dateToday} beers={this.state.amountOfBeersToday}/>\r\n\r\n                section = (<section className= \"loggedInSection\">\r\n                    {today}\r\n                    {counter}\r\n                    {list}\r\n                </section>)\r\n\r\n                bubbles = (<Bubbles/>);\r\n            } else {\r\n                section = (<section className=\"rendering\">\r\n                    <h3>Fetching data</h3>\r\n                    <div className=\"loaderDiv\">\r\n                        <BeatLoader size=\"50\" color=\"white\"/>\r\n                    </div>\r\n                </section>)\r\n            }\r\n        } else {\r\n            section = (<section>\r\n                    <h3>Please log in</h3><br/>\r\n                    <p>You need a solid pod to log in.</p>\r\n                    <p>You can get one <a href=\"https://solid.inrupt.com/get-a-solid-pod\">here.</a></p>\r\n                </section>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <section className={\"App \" + (this.state.isLoggedIn && this.state.hasFetched ? \"appLoggedIn\" : \"appNotLoggedIn\")}>\r\n                <header>\r\n                    <h1>Beer counter</h1>\r\n                </header>\r\n                <AuthButton\r\n                className=\"authButtonApp\"\r\n                loggedIn={this.state.isLoggedIn}\r\n                onClick={this.state.isLoggedIn ? this.handleLogOut : this.handleLogIn}\r\n                />\r\n                <section className=\"appSection\">\r\n                    {section}\r\n                </section>\r\n                <footer>\r\n                    <span>\r\n                      This application is powered by\r\n                    </span>\r\n                    <a href=\"https://solid.inrupt.com/\">\r\n                        <img alt=\"Solid inrupt\" src={process.env.PUBLIC_URL + '/Knipsel.png'}/>\r\n                    </a>\r\n                </footer>\r\n                {bubbles}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}