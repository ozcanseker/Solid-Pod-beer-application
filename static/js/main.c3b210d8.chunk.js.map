{"version":3,"sources":["../node_modules/@trust/webcrypto/src/algorithms sync","components/Counter.js","components/ListItem.js","components/List.js","components/Today.js","components/LogOutButton.js","components/LogInButton.js","netwerk/SolidCommunicator.js","model/BeerCounter.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Counter","props","animateButton","preventDefault","setState","className","setTimeout","onClick","state","this","React","Component","ListItem","beer","value","date","List","list","beerCounter","getOrderedDateList","map","key","String","getValueOnDate","padStart","Today","beers","LogOutButton","LogInButton","fileClient","require","authClient","rdfLib","SOLID","Namespace","TERMS","RDF","BEERCOUNTER","PIM","ACL","BEERCOUNTERRECORD","sym","findEmptyFile","publicLocation","a","appLocation","fetch","status","makeRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","stringToDate","dateString","array","split","Date","UTC","postSolidFile","folder","filename","body","method","headers","putSolidFile","url","SolidCommuncator","webid","applocation","appStore","subscribe","queryList","networking","query","getDateToday","amount","getBeerCount","push","startSendingFile","shift","blankNode","any","add","serialize","undefined","appStoreTTL","console","log","checkSession","session","profile","webId","getUserCard","storeProfileCard","checkacess","getPPILocation","ppiObject","getStorePublic","storagePublic","getApplicationLocation","ppi","store","applicationLocation","getAppStore","getDatesAndCountsFromStore","setCountsPerDate","readAcess","match","Write","Append","graph","appTTL","parse","publicProfileIndex","storePublicProfileIndex","app","appQuery","createAppNodeForPublicTypeIndex","checkIntegrity","replace","profileCardTTl","storePublicTypeIndex","publicTypeIndexTTL","blankNodes","each","Map","forEach","element","dd","getDate","mm","getMonth","yyyy","getFullYear","dateToString","set","publicTypeIndex","newTTLpublicTypeindex","BeerCounter","subscribers","countsPerDate","Array","from","sort","b","datea","arrayb","getTime","get","upDateSubScribers","has","dateToday","count","subscriber","update","filter","subscriberList","today","App","checkForLogin","unsubscribe","then","isLoggedIn","SolidCommunicator","build","aa","hasFetched","amountOfBeersToday","catch","err","error","handleLogIn","popupLogin","popupUri","handleLogOut","logout","increaseBeers","increaeCountToday","button","appData","rendering","counter","href","alt","src","process","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3b210d8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 405;","import React from 'react';\r\n\r\nclass Counter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            className : \"\"\r\n        }\r\n    }\r\n\r\n    animateButton = (e) => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        this.setState({\r\n            className : \"animate\"\r\n        })\r\n        \r\n        setTimeout(() => {\r\n            this.setState({\r\n                className : \"\"\r\n            })\r\n        },700);\r\n\r\n        this.props.onClick();\r\n      };\r\n\r\n    render(){\r\n        return (\r\n            <button className={\"bubbly-button \" + this.state.className} onClick = {this.animateButton}>One up the BEER</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nclass ListItem extends React.Component{\r\n    render(){\r\n      let beer = this.props.value === 1 ? \"BEER\" : \"BEERS\";\r\n  \r\n      return (\r\n        <div className = \"record\">\r\n          <p className = \"topRecord\">\r\n            on {this.props.date} you drank\r\n          </p>\r\n          <p className = \"bottomRecord\">        \r\n            {this.props.value} {beer}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nclass List extends React.Component{\r\n    render(){\r\n      let listDates = this.props.beerCounter.getOrderedDateList();\r\n      let list = listDates.map(date => <ListItem key = {date} date = {date} value = {String(this.props.beerCounter.getValueOnDate(date)).padStart(2, '0')}></ListItem>);\r\n      return (\r\n        <div className = \"listContainer\">\r\n          {list}\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default List;","import React from 'react';\r\n\r\nclass Today extends React.Component{\r\n  render(){\r\n    let beer = this.props.beers === 1 ? \"BEER\" : \"BEERS\";\r\n\r\n    return (\r\n      <div className = \"today\">\r\n        <p>Today You Drank</p>\r\n        <p className = \"amount\"><span className = \"todayBeer\">{this.props.beers} {beer}</span></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Today;","import React from 'react';\r\n\r\nclass LogOutButton extends React.Component{\r\n    render(){\r\n      return(\r\n        <button onClick = {this.props.onClick} className = \"authButton\">Log Out</button>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default LogOutButton;","import React from 'react';\r\n\r\nclass LogInButton extends React.Component{\r\n    render(){\r\n      return(\r\n        <button onClick = {this.props.onClick} className = \"authButton\">Log In</button>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default LogInButton;","const fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst BEERCOUNTER = rdfLib.Namespace(\"https://ozcanseker.inrupt.net/vocabulary#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst ACL = rdfLib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\n\r\nlet BEERCOUNTERRECORD = rdfLib.sym(\"https://ozcanseker.inrupt.net/vocabulary#BeerCounterRecord\");\r\n\r\nclass SolidCommuncator{\r\n\r\n    /**\r\n     * \r\n     * @param {string} webid \r\n     * @param {string} applocation \r\n     * @param {store:rdflib} appStore \r\n     * @param {BeerCounter} beerCounter \r\n     */\r\n    constructor(webid, applocation, appStore, beerCounter){\r\n        this.webid = webid;\r\n        this.applocation = applocation;\r\n        this.appStore = appStore;\r\n\r\n        //subscribe to model\r\n        this.beerCounter = beerCounter;\r\n        this.beerCounter.subscribe(this);\r\n        \r\n        //for the networking\r\n        this.queryList = [];\r\n        this.networking = false;\r\n    }\r\n\r\n    update(){\r\n        let query = {\r\n            date : this.beerCounter.getDateToday(),\r\n            amount : this.beerCounter.getBeerCount()\r\n        }\r\n\r\n        this.queryList.push(query);\r\n\r\n        if(!this.networking){\r\n            this.startSendingFile();\r\n        }\r\n    }\r\n\r\n    async startSendingFile(){\r\n        this.networking = true;\r\n\r\n        while(this.queryList.length > 0){\r\n            let query = this.queryList.shift();\r\n            let date = query.date;\r\n            let blankNode = this.appStore.any(null, null, stringToDate(date));\r\n\r\n            if(blankNode){\r\n                let statment = this.appStore.any(blankNode, RDF('value'), null);   \r\n                statment.value = query.amount + \"\";     \r\n            }else{ \r\n                blankNode = rdfLib.blankNode();\r\n                this.appStore.add(blankNode, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n                this.appStore.add(blankNode, TERMS('created'), stringToDate(date));\r\n                this.appStore.add(blankNode, RDF('value'), query.amount);\r\n            }\r\n        }\r\n\r\n        let appStoreTTL = await rdfLib.serialize(undefined, this.appStore, 'text/turtle');\r\n        console.log(this.applocation);\r\n        await putSolidFile(this.applocation, appStoreTTL);\r\n\r\n        if(this.queryList.length > 0){\r\n            this.startSendingFile();\r\n        }else{\r\n            this.networking = false;\r\n        }\r\n    }\r\n\r\n    static async build(beerCounter){\r\n        //get the session of the user logged in\r\n        const session = await fileClient.checkSession();\r\n        //make a named node of the session webid of the user\r\n        const profile = rdfLib.sym(session.webId);\r\n\r\n        //get a store of the profile card of the logged in user\r\n        let storeProfileCard = await this.getUserCard(session);\r\n\r\n        try{\r\n            this.checkacess(storeProfileCard);\r\n        }catch(e){\r\n            throw e;\r\n        }\r\n\r\n        //store for the Public Profile Index\r\n        let ppiObject = await this.getPPILocation(profile, storeProfileCard);\r\n\r\n        //String that shows the location of the public storage of the pod\r\n        let storagePublic = await this.getStorePublic(profile, storeProfileCard);        \r\n\r\n        //Gets the location for the application or make a new enty in the Public profile index for the application.\r\n        //also makes an empty file at the application location\r\n        //string\r\n        let applicationLocation = await this.getApplicationLocation(ppiObject.ppi , ppiObject.store, storagePublic);\r\n\r\n        //get the application file in store form\r\n        let appStore = await this.getAppStore(applicationLocation);\r\n\r\n        // // //update the model BeerCounter with data from the file.\r\n        let map = this.getDatesAndCountsFromStore(appStore);\r\n        beerCounter.setCountsPerDate(map);\r\n\r\n        return new SolidCommuncator(session.webId, applicationLocation, appStore, beerCounter);\r\n    }  \r\n\r\n    static checkacess(storeProfileCard){\r\n        let blankNode = storeProfileCard.any(undefined, ACL('origin'),rdfLib.sym(\"https://ozcanseker.github.io\"));\r\n        let readAcess = storeProfileCard.match(blankNode, ACL('mode'), ACL('Read'));\r\n        let Write = storeProfileCard.match(blankNode, ACL('mode'),ACL('Write'));\r\n        let Append = storeProfileCard.match(blankNode, ACL('mode'),ACL('Append'));\r\n        \r\n        if(!readAcess.length){\r\n            throw new Error(\"No Read acess\");\r\n        }\r\n\r\n        if(!Write.length){\r\n            throw new Error(\"No Write acess\");\r\n        }\r\n\r\n        if(!Append.length){\r\n            throw new Error(\"No Append acess\");\r\n        }\r\n    }\r\n\r\n    static async getAppStore(applicationLocation){\r\n        let appStore = rdfLib.graph();\r\n        let appTTL = await fileClient.fetch(applicationLocation);\r\n        await rdfLib.parse(appTTL, appStore, applicationLocation , \"text/turtle\");\r\n        return appStore;\r\n    }\r\n\r\n    static async getApplicationLocation(publicProfileIndex, storePublicProfileIndex, storagePublic){\r\n        let app = rdfLib.sym(publicProfileIndex.value + \"#BeerCounter\");\r\n        let appQuery = storePublicProfileIndex.any(app, SOLID(\"instance\"));\r\n\r\n        if(!appQuery){\r\n            //make a new entery in the ppi and make a file for you application\r\n            return await this.createAppNodeForPublicTypeIndex(storePublicProfileIndex, publicProfileIndex, storagePublic, app);\r\n        }else{\r\n            await this.checkIntegrity(appQuery.value, storagePublic);\r\n            //get the applocation\r\n            return appQuery.value;\r\n        }\r\n    }\r\n\r\n    static async checkIntegrity(applocation, storagePublic){\r\n        let res = await authClient.fetch(applocation);\r\n        if(res.status === 404){\r\n            await postSolidFile(storagePublic, applocation.match(\"[^\\/]+$\")[0].replace(\".ttl\", \"\") ,\"\");\r\n            console.log(\"app not found\");\r\n        }\r\n    }\r\n\r\n    static async getUserCard(session){\r\n        const profileCardTTl = await fileClient.fetch(session.webId); \r\n        const storeProfileCard = rdfLib.graph(); \r\n        rdfLib.parse(profileCardTTl, storeProfileCard, session.webId, \"text/turtle\");\r\n        return storeProfileCard;\r\n    }\r\n    \r\n    static async getPPILocation(profile, storeProfileCard){\r\n        const publicProfileIndex = storeProfileCard.any(profile, SOLID(\"publicTypeIndex\"));\r\n        const storePublicTypeIndex = rdfLib.graph();\r\n        const publicTypeIndexTTL = await fileClient.fetch(publicProfileIndex.value);\r\n        rdfLib.parse(publicTypeIndexTTL, storePublicTypeIndex, publicProfileIndex.value, \"text/turtle\");\r\n        return {store : storePublicTypeIndex, ppi : publicProfileIndex};\r\n    }\r\n\r\n    static getStorePublic(profile, storeProfileCard){\r\n        let locationStorage = storeProfileCard.any(profile, PIM(\"storage\"));\r\n        return locationStorage.value + \"public/\";\r\n    }\r\n\r\n    static getDatesAndCountsFromStore(store){\r\n        let blankNodes = store.each(null , null, BEERCOUNTER('BeerCounterRecord'));\r\n        let map = new Map();\r\n\r\n        blankNodes.forEach(element => {\r\n            let value = store.any(element, RDF('value'));\r\n            let date = store.any(element, TERMS('created'));\r\n            date = dateToString(new Date(date.value));\r\n\r\n            map.set(date, value.value);\r\n        });\r\n\r\n        return map;\r\n    }\r\n\r\n    static async createAppNodeForPublicTypeIndex(store, publicTypeIndex, publicLocation, app){\r\n        let appLocation = await findEmptyFile(publicLocation);\r\n        await postSolidFile(publicLocation, appLocation, \"\");\r\n\r\n        appLocation = publicLocation + appLocation + '.ttl';\r\n        appLocation = rdfLib.sym(appLocation);\r\n        \r\n        store.add(publicTypeIndex, TERMS('references'), app);\r\n        store.add(app, RDF('type'), SOLID('TypeRegistration'));\r\n        store.add(app, SOLID('forClass'), BEERCOUNTERRECORD);\r\n        store.add(app, SOLID('instance'), appLocation);\r\n        \r\n        let newTTLpublicTypeindex = await rdfLib.serialize(undefined, store, publicTypeIndex.value, 'text/turtle');\r\n\r\n        await putSolidFile(publicTypeIndex.value, newTTLpublicTypeindex);\r\n\r\n        return appLocation.value;\r\n    }\r\n}\r\n   \r\nasync function findEmptyFile(publicLocation){    \r\n    let appLocation = publicLocation + 'beercounter'\r\n  \r\n    let res = await authClient.fetch(appLocation + '.ttl');\r\n    if(res.status % 400 < 100){\r\n      return 'beercounter';\r\n    }else{\r\n      return appLocation =  'beercounter' + makeRandomString(10);\r\n    }\r\n  }\r\n  \r\n  function makeRandomString(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\nfunction dateToString(date){\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = date.getFullYear();\r\n\r\n    return dd + '/' + mm + '/' + yyyy;\r\n}\r\n\r\nfunction stringToDate(dateString){\r\n    let array = dateString.split('/');\r\n    let date = new Date(Date.UTC(array[2], array[1] - 1, array[0]));    \r\n    return date;\r\n}\r\n\r\nasync function postSolidFile(folder, filename , body){\r\n    authClient.fetch(folder, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'text/turtle',\r\n        'Link': '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"',\r\n        'SLUG' : filename\r\n      },\r\n      body : body\r\n  });\r\n}\r\n  \r\nasync function putSolidFile(url, body){\r\nauthClient.fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n        'Content-Type': 'text/turtle'      \r\n    },\r\n    body: body\r\n});\r\n}\r\n\r\nexport default SolidCommuncator;","class BeerCounter {\r\n    constructor(){\r\n        this.subscribers = []; \r\n        this.countsPerDate = new Map();\r\n    }\r\n\r\n    getOrderedDateList(){\r\n        let arr = Array.from(this.countsPerDate.keys()).sort((a,b) =>{\r\n            let array = a.split('/');\r\n            let datea = new Date(Date.UTC(array[2], array[1] - 1, array[0]));    \r\n            \r\n            let arrayb = b.split('/');\r\n            let dateb= new Date(Date.UTC(arrayb[2], arrayb[1] - 1, arrayb[0]));   \r\n\r\n            return dateb.getTime() - datea.getTime();\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    getValueOnDate(date){\r\n       return this.countsPerDate.get(date);\r\n    }\r\n\r\n    setCountsPerDate(map){\r\n        this.countsPerDate = map;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getBeerCount(){\r\n        if(this.countsPerDate.has(this.dateToday())){\r\n            return this.getValueOnDate(this.dateToday());\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getDateToday(){\r\n        return this.dateToday();\r\n    }\r\n\r\n    increaeCountToday(){\r\n        let date = this.dateToday();\r\n        let count;\r\n\r\n        if(this.countsPerDate.has(date)){\r\n            count = this.countsPerDate.get(date);\r\n        }else{\r\n            count = 0;\r\n        }\r\n\r\n        count++;\r\n\r\n        this.countsPerDate.set(date, count);\r\n\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this.subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this.subscribers.push(subscriber);\r\n    }\r\n\r\n    unsubscribe(subscriber){\r\n        this.subscribers.filter(subscriberList  => {\r\n            return subscriberList === subscriber;\r\n        });\r\n    }\r\n\r\n    dateToday(){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        var yyyy = today.getFullYear();\r\n      \r\n        return dd + '/' + mm + '/' + yyyy;\r\n    }\r\n}\r\n\r\nexport default BeerCounter;","import React from 'react';\r\nimport './App.scss';\r\nimport Counter from './components/Counter';\r\nimport List from './components/List';\r\nimport Today from './components/Today';\r\nimport LogOutButton from './components/LogOutButton'\r\nimport LogInButton from './components/LogInButton'\r\n\r\nimport SolidCommunicator from './netwerk/SolidCommunicator';\r\nimport BeerCounter from './model/BeerCounter'\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn : false,\r\n      error: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.checkForLogin();\r\n  }\r\n\r\n  checkForLogin = () => {\r\n    if(this.state.beerCounter){\r\n      this.state.beerCounter.unsubscribe();\r\n    }\r\n\r\n    fileClient.checkSession().then( session => {\r\n      let beerCounter = new BeerCounter();\r\n      beerCounter.subscribe(this);\r\n\r\n      if(session){\r\n        this.setState({\r\n          isLoggedIn : true,\r\n          beerCounter : beerCounter\r\n        });\r\n  \r\n        SolidCommunicator.build(beerCounter).then( aa => {\r\n          this.setState({\r\n            hasFetched: true,\r\n            amountOfBeersToday : this.state.beerCounter.getBeerCount(),\r\n            dateToday : this.state.beerCounter.getDateToday()\r\n          });\r\n        }).catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            error : true\r\n          })\r\n        });\r\n      }else{\r\n        this.setState({\r\n          isLoggedIn : false\r\n        });\r\n      }\r\n    }, err =>  this.setState({\r\n      isLoggedIn : false\r\n    }));\r\n  }\r\n\r\n  update = () =>{\r\n\r\n    this.setState({\r\n      amountOfBeersToday : this.state.beerCounter.getBeerCount(),\r\n      dateToday : this.state.beerCounter.getDateToday()\r\n    });\r\n\r\n  }\r\n\r\n  handleLogIn = () => {\r\n    let popupUri = './popup.html';\r\n    authClient.popupLogin({ popupUri }).then(() => {\r\n      this.checkForLogin();\r\n    })\r\n  }\r\n\r\n  handleLogOut = () => {\r\n    fileClient.logout()\r\n    .then(\r\n      this.setState({isLoggedIn : false})\r\n      );\r\n  }\r\n\r\n  increaseBeers = () => {\r\n    this.state.beerCounter.increaeCountToday();\r\n  }\r\n  \r\n  render(){\r\n    let button;\r\n    let appData;\r\n    let rendering;\r\n    let error;\r\n\r\n    if(this.state.isLoggedIn){\r\n      button = <LogOutButton onClick = {this.handleLogOut}></LogOutButton>\r\n\r\n      if(this.state.error){\r\n        error = <p className = \"error\">\r\n          The application does not have correct access, Please fix this by giving this application Read, Write and Append access \r\n          in your pod\r\n        </p>\r\n      }else if(this.state.hasFetched){\r\n        let list = <List beerCounter = {this.state.beerCounter}></List>\r\n        let counter = <Counter onClick = {this.increaseBeers}></Counter>\r\n        let today = <Today date = {this.state.dateToday} beers = {this.state.amountOfBeersToday}></Today>\r\n      \r\n        appData = (<section>\r\n            {today}\r\n            {counter}\r\n            {list}\r\n        </section>)\r\n      }else{\r\n        rendering = (<section id = \"rendering\">\r\n          <h3>Fetching data</h3>\r\n          <div id = \"fetchinAnimation\"></div>\r\n        </section>)\r\n      }\r\n    }else{\r\n      button = <LogInButton onClick = {this.handleLogIn}></LogInButton>\r\n      rendering = (<section id = \"rendering\">\r\n                      <h3>Please log in</h3><br/>\r\n                      <p>You need a solid pod to log in</p>\r\n                      <p>You can get one <a href =\"https://solid.inrupt.com/get-a-solid-pod\">here</a></p>\r\n                  </section>\r\n                  )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Beer counter</h1>\r\n        </header>\r\n        <section id = \"authDiv\">\r\n          {button}\r\n        </section>\r\n          {rendering}\r\n          {appData}\r\n          {error}\r\n          <footer>\r\n            <span>\r\n              This application is powered by\r\n            </span>\r\n              <a href=\"https://solid.inrupt.com/\">\r\n                <img alt = \"Solid inrupt\" src={process.env.PUBLIC_URL + '/Knipsel.png'} /> \r\n              </a>\r\n          </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}